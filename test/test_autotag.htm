<!DOCTYPE html>
<html>
	<head>
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<!-- Qunit stuff -->
		<script src="libs/qunit.js"></script>
		<link rel="stylesheet" type="text/css" href="libs/qunit.css">
	</head>
	<body>
		<h1>sole.js test tagging</h1>
		<p>
			<b>Note:</b> this may fail in IE8 or older, and is not a recommended way to test things; also won't work in strict mode - it is obviously very useful when it works...
			Ref: <a href="http://kangax.github.io/nfe/#names-in-debuggers">http://kangax.github.io/nfe/#names-in-debuggers</a>
		</p>
		<div id="qunit"></div>
		<div id="qunit-fixture"></div>

		<!-- Load sole.js -->
		<script src="build/testbuild.js"></script>

		<script>

			//	Use automatic tagging based on function name - may fail in IE8 or older: http://kangax.github.io/nfe/#names-in-debuggers
			sole.setArg('useFuncTags', true);

			//	Note that we have defined our functions as named "non-hoisted" - we don't like hoisted functions around here...
			//	http://www.adequatelygood.com/JavaScript-Scoping-and-Hoisting.html
			var levelOne = function levelOne(arg) {
				sole.log(arg);
				var levelTwo = function levelTwo(arg) {
					sole.log(arg);
					var levelThree = function levelThree(arg) {
						sole.log(arg);
						sole.tag('im3');
						sole.warn('Added 3rd level manual tag');
					};
					levelThree(arg * 3);
					sole.tag('im2');
					sole.warn('Added 2nd level manual tag');
				}
				levelTwo(arg * 2);
			};

			levelOne(1);
	    </script>
	    
	    <script>

	    	var out = sole.get();

			test( "Automatic tagging", function() {
				ok( out.length === 5, "We have the right number of output events" );
				ok( out[0].args[0] === 1 && out[0].tags[0] === "levelOne", "Level one auto tagging is as expected" );
				ok( out[1].args[0] === 2 && out[1].tags[0] === "levelTwo", "Level two auto tagging is as expected" );
				ok( out[2].args[0] === 6 && out[2].tags[0] === "levelThree", "Level three auto tagging is as expected" );
				ok( out[3].args[0] === "Added 3rd level manual tag" && out[3].tags[0] === "im3" && out[3].tags[1] === "levelThree" && out[3].type === "warn", "Level three manual tagging is as expected" );
				ok( out[4].args[0] === "Added 2nd level manual tag" && out[4].tags[0] === "im2" && out[4].tags[1] === "levelTwo" && out[4].type === "warn", "Level two manual tagging is after level three as expected" );
			});
	    </script>
	</body>
</html>