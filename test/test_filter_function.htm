<!DOCTYPE html>
<html>
	<head>
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<!-- Qunit stuff -->
		<script src="libs/qunit.js"></script>
		<link rel="stylesheet" type="text/css" href="libs/qunit.css">
	</head>
	<body>
		<h1>sole.js test filtering using a function</h1>
		<div id="qunit"></div>
		<div id="qunit-fixture"></div>

		<!-- Load sole.js -->
		<script src="build/testbuild.js"></script>

		<!-- Load the repeat filter -->
		<script src="../filter/sole.filter.repeat.js"></script>

		<script>
			sole.tag("fruit.apple").log("We have an apple");
			sole.tag("fruit.apple.green").log("We have a green apple");
			sole.tag("fruit.apple.red").log("We have a red apple");
			sole.tag("fruit.apple.red").log("We have a red apple");
			sole.tag("fruit.orange").log("We have an orange");
			sole.tag("fruit.orange.valencia").warn("We have a valencia orange");
			sole.tag("fruit.orange.valencia.old").warn("We have an old valencia orange");
			sole.tag("beverage.orangejuice").error("We have orange juice!");
			sole.tag("fruit.orange").log("We have an orange");
			sole.tag("fruit.orange").log("We have an orange");
			sole.tag("fruit.orange").log("We have an orange");
	    </script>
	    
	    <script>
			var out = [],
				mySole = new Sole();

			out.push(sole.filter(function(idx, item) {
				return item.type == "warn";
			}));

			out.push(sole.filter(function(idx, item) {
				return item.tags.join("").split("orange").length > 1 && item.type == "log";
			}));

			out.push(sole.applyFilter('repeat'));

			test( "filtering by function", function() {
				ok( out[0].length === 2, "Filtered on warn" );
				ok( out[1].length === 4, "Filtered on orange logs" );
				ok( out[2].length === 4, "Repeat filter" );
			} );
	    </script>
	</body>
</html>